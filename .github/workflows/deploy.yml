name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Trigger the pipeline on pushing to the 'main' branch

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Build Docker image
        run: |
          docker build -t flask-app .

      - name: Authenticate Docker to AWS ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      - name: Tag Docker image
        run: |
          docker tag flask-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest

      - name: Deploy to ECS
        run: |
          ecs_task_definition=$(aws ecs register-task-definition --family ${{ secrets.ECS_TASK_DEFINITION }} \
          --container-definitions "[{\"name\":\"flask-app\",\"image\":\"${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:latest\",\"memory\":512,\"cpu\":256,\"essential\":true}]" \
          --query 'taskDefinition.taskDefinitionArn' --output text)
          
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --task-definition $ecs_task_definition
